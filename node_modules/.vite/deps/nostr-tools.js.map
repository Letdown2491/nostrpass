{
  "version": 3,
  "sources": ["../../.pnpm/nostr-tools@2.16.2_typescript@5.9.2/node_modules/nostr-tools/lib/esm/index.js", "../../.pnpm/@noble+ciphers@0.5.3/node_modules/@noble/ciphers/src/aes.ts", "../../.pnpm/@noble+ciphers@0.5.3/node_modules/@noble/ciphers/src/_polyval.ts"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pure.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex as bytesToHex2 } from \"@noble/hashes/utils\";\n\n// core.ts\nvar verifiedSymbol = Symbol(\"verified\");\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i2 = 0; i2 < event.tags.length; i2++) {\n    let tag = event.tags[i2];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] !== \"string\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction sortEvents(events) {\n  return events.sort((a, b) => {\n    if (a.created_at !== b.created_at) {\n      return b.created_at - a.created_at;\n    }\n    return a.id.localeCompare(b.id);\n  });\n}\n\n// pure.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  Queue: () => Queue,\n  QueueNode: () => QueueNode,\n  binarySearch: () => binarySearch,\n  bytesToHex: () => bytesToHex,\n  hexToBytes: () => hexToBytes,\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nimport { bytesToHex, hexToBytes } from \"@noble/hashes/utils\";\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  try {\n    if (url.indexOf(\"://\") === -1)\n      url = \"wss://\" + url;\n    let p = new URL(url);\n    p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n    if (p.pathname.endsWith(\"/\"))\n      p.pathname = p.pathname.slice(0, -1);\n    if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n      p.port = \"\";\n    p.searchParams.sort();\n    p.hash = \"\";\n    return p.toString();\n  } catch (e) {\n    throw new Error(`Invalid URL: ${url}`);\n  }\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return b.created_at - event.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return event.created_at - b.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction binarySearch(arr, compare) {\n  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n    const cmp = compare(arr[mid]);\n    if (cmp === 0) {\n      return [mid, true];\n    }\n    if (cmp < 0) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return [start, false];\n}\nvar QueueNode = class {\n  value;\n  next = null;\n  prev = null;\n  constructor(message) {\n    this.value = message;\n  }\n};\nvar Queue = class {\n  first;\n  last;\n  constructor() {\n    this.first = null;\n    this.last = null;\n  }\n  enqueue(value) {\n    const newNode = new QueueNode(value);\n    if (!this.last) {\n      this.first = newNode;\n      this.last = newNode;\n    } else if (this.last === this.first) {\n      this.last = newNode;\n      this.last.prev = this.first;\n      this.first.next = newNode;\n    } else {\n      newNode.prev = this.last;\n      this.last.next = newNode;\n      this.last = newNode;\n    }\n    return true;\n  }\n  dequeue() {\n    if (!this.first)\n      return null;\n    if (this.first === this.last) {\n      const target2 = this.first;\n      this.first = null;\n      this.last = null;\n      return target2.value;\n    }\n    const target = this.first;\n    this.first = target.next;\n    if (this.first) {\n      this.first.prev = null;\n    }\n    return target.value;\n  }\n};\n\n// pure.ts\nvar JS = class {\n  generateSecretKey() {\n    return schnorr.utils.randomPrivateKey();\n  }\n  getPublicKey(secretKey) {\n    return bytesToHex2(schnorr.getPublicKey(secretKey));\n  }\n  finalizeEvent(t, secretKey) {\n    const event = t;\n    event.pubkey = bytesToHex2(schnorr.getPublicKey(secretKey));\n    event.id = getEventHash(event);\n    event.sig = bytesToHex2(schnorr.sign(getEventHash(event), secretKey));\n    event[verifiedSymbol] = true;\n    return event;\n  }\n  verifyEvent(event) {\n    if (typeof event[verifiedSymbol] === \"boolean\")\n      return event[verifiedSymbol];\n    const hash = getEventHash(event);\n    if (hash !== event.id) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n    try {\n      const valid = schnorr.verify(event.sig, hash, event.pubkey);\n      event[verifiedSymbol] = valid;\n      return valid;\n    } catch (err) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n  }\n};\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex2(eventHash);\n}\nvar i = new JS();\nvar generateSecretKey = i.generateSecretKey;\nvar getPublicKey = i.getPublicKey;\nvar finalizeEvent = i.finalizeEvent;\nvar verifyEvent = i.verifyEvent;\n\n// kinds.ts\nvar kinds_exports = {};\n__export(kinds_exports, {\n  Application: () => Application,\n  BadgeAward: () => BadgeAward,\n  BadgeDefinition: () => BadgeDefinition,\n  BlockedRelaysList: () => BlockedRelaysList,\n  BookmarkList: () => BookmarkList,\n  Bookmarksets: () => Bookmarksets,\n  Calendar: () => Calendar,\n  CalendarEventRSVP: () => CalendarEventRSVP,\n  ChannelCreation: () => ChannelCreation,\n  ChannelHideMessage: () => ChannelHideMessage,\n  ChannelMessage: () => ChannelMessage,\n  ChannelMetadata: () => ChannelMetadata,\n  ChannelMuteUser: () => ChannelMuteUser,\n  ClassifiedListing: () => ClassifiedListing,\n  ClientAuth: () => ClientAuth,\n  CommunitiesList: () => CommunitiesList,\n  CommunityDefinition: () => CommunityDefinition,\n  CommunityPostApproval: () => CommunityPostApproval,\n  Contacts: () => Contacts,\n  CreateOrUpdateProduct: () => CreateOrUpdateProduct,\n  CreateOrUpdateStall: () => CreateOrUpdateStall,\n  Curationsets: () => Curationsets,\n  Date: () => Date2,\n  DirectMessageRelaysList: () => DirectMessageRelaysList,\n  DraftClassifiedListing: () => DraftClassifiedListing,\n  DraftLong: () => DraftLong,\n  Emojisets: () => Emojisets,\n  EncryptedDirectMessage: () => EncryptedDirectMessage,\n  EventDeletion: () => EventDeletion,\n  FileMetadata: () => FileMetadata,\n  FileServerPreference: () => FileServerPreference,\n  Followsets: () => Followsets,\n  GenericRepost: () => GenericRepost,\n  Genericlists: () => Genericlists,\n  GiftWrap: () => GiftWrap,\n  HTTPAuth: () => HTTPAuth,\n  Handlerinformation: () => Handlerinformation,\n  Handlerrecommendation: () => Handlerrecommendation,\n  Highlights: () => Highlights,\n  InterestsList: () => InterestsList,\n  Interestsets: () => Interestsets,\n  JobFeedback: () => JobFeedback,\n  JobRequest: () => JobRequest,\n  JobResult: () => JobResult,\n  Label: () => Label,\n  LightningPubRPC: () => LightningPubRPC,\n  LiveChatMessage: () => LiveChatMessage,\n  LiveEvent: () => LiveEvent,\n  LongFormArticle: () => LongFormArticle,\n  Metadata: () => Metadata,\n  Mutelist: () => Mutelist,\n  NWCWalletInfo: () => NWCWalletInfo,\n  NWCWalletRequest: () => NWCWalletRequest,\n  NWCWalletResponse: () => NWCWalletResponse,\n  NostrConnect: () => NostrConnect,\n  OpenTimestamps: () => OpenTimestamps,\n  Pinlist: () => Pinlist,\n  PrivateDirectMessage: () => PrivateDirectMessage,\n  ProblemTracker: () => ProblemTracker,\n  ProfileBadges: () => ProfileBadges,\n  PublicChatsList: () => PublicChatsList,\n  Reaction: () => Reaction,\n  RecommendRelay: () => RecommendRelay,\n  RelayList: () => RelayList,\n  Relaysets: () => Relaysets,\n  Report: () => Report,\n  Reporting: () => Reporting,\n  Repost: () => Repost,\n  Seal: () => Seal,\n  SearchRelaysList: () => SearchRelaysList,\n  ShortTextNote: () => ShortTextNote,\n  Time: () => Time,\n  UserEmojiList: () => UserEmojiList,\n  UserStatuses: () => UserStatuses,\n  Zap: () => Zap,\n  ZapGoal: () => ZapGoal,\n  ZapRequest: () => ZapRequest,\n  classifyKind: () => classifyKind,\n  isAddressableKind: () => isAddressableKind,\n  isEphemeralKind: () => isEphemeralKind,\n  isKind: () => isKind,\n  isRegularKind: () => isRegularKind,\n  isReplaceableKind: () => isReplaceableKind\n});\nfunction isRegularKind(kind) {\n  return 1e3 <= kind && kind < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind);\n}\nfunction isReplaceableKind(kind) {\n  return [0, 3].includes(kind) || 1e4 <= kind && kind < 2e4;\n}\nfunction isEphemeralKind(kind) {\n  return 2e4 <= kind && kind < 3e4;\n}\nfunction isAddressableKind(kind) {\n  return 3e4 <= kind && kind < 4e4;\n}\nfunction classifyKind(kind) {\n  if (isRegularKind(kind))\n    return \"regular\";\n  if (isReplaceableKind(kind))\n    return \"replaceable\";\n  if (isEphemeralKind(kind))\n    return \"ephemeral\";\n  if (isAddressableKind(kind))\n    return \"parameterized\";\n  return \"unknown\";\n}\nfunction isKind(event, kind) {\n  const kindAsArray = kind instanceof Array ? kind : [kind];\n  return validateEvent(event) && kindAsArray.includes(event.kind) || false;\n}\nvar Metadata = 0;\nvar ShortTextNote = 1;\nvar RecommendRelay = 2;\nvar Contacts = 3;\nvar EncryptedDirectMessage = 4;\nvar EventDeletion = 5;\nvar Repost = 6;\nvar Reaction = 7;\nvar BadgeAward = 8;\nvar Seal = 13;\nvar PrivateDirectMessage = 14;\nvar GenericRepost = 16;\nvar ChannelCreation = 40;\nvar ChannelMetadata = 41;\nvar ChannelMessage = 42;\nvar ChannelHideMessage = 43;\nvar ChannelMuteUser = 44;\nvar OpenTimestamps = 1040;\nvar GiftWrap = 1059;\nvar FileMetadata = 1063;\nvar LiveChatMessage = 1311;\nvar ProblemTracker = 1971;\nvar Report = 1984;\nvar Reporting = 1984;\nvar Label = 1985;\nvar CommunityPostApproval = 4550;\nvar JobRequest = 5999;\nvar JobResult = 6999;\nvar JobFeedback = 7e3;\nvar ZapGoal = 9041;\nvar ZapRequest = 9734;\nvar Zap = 9735;\nvar Highlights = 9802;\nvar Mutelist = 1e4;\nvar Pinlist = 10001;\nvar RelayList = 10002;\nvar BookmarkList = 10003;\nvar CommunitiesList = 10004;\nvar PublicChatsList = 10005;\nvar BlockedRelaysList = 10006;\nvar SearchRelaysList = 10007;\nvar InterestsList = 10015;\nvar UserEmojiList = 10030;\nvar DirectMessageRelaysList = 10050;\nvar FileServerPreference = 10096;\nvar NWCWalletInfo = 13194;\nvar LightningPubRPC = 21e3;\nvar ClientAuth = 22242;\nvar NWCWalletRequest = 23194;\nvar NWCWalletResponse = 23195;\nvar NostrConnect = 24133;\nvar HTTPAuth = 27235;\nvar Followsets = 3e4;\nvar Genericlists = 30001;\nvar Relaysets = 30002;\nvar Bookmarksets = 30003;\nvar Curationsets = 30004;\nvar ProfileBadges = 30008;\nvar BadgeDefinition = 30009;\nvar Interestsets = 30015;\nvar CreateOrUpdateStall = 30017;\nvar CreateOrUpdateProduct = 30018;\nvar LongFormArticle = 30023;\nvar DraftLong = 30024;\nvar Emojisets = 30030;\nvar Application = 30078;\nvar LiveEvent = 30311;\nvar UserStatuses = 30315;\nvar ClassifiedListing = 30402;\nvar DraftClassifiedListing = 30403;\nvar Date2 = 31922;\nvar Time = 31923;\nvar Calendar = 31924;\nvar CalendarEventRSVP = 31925;\nvar Handlerrecommendation = 31989;\nvar Handlerinformation = 31990;\nvar CommunityDefinition = 34550;\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    return false;\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1) {\n    return false;\n  }\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    return false;\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at > filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    if (matchFilter(filters[i2], event)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction mergeFilters(...filters) {\n  let result = {};\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    let filter = filters[i2];\n    Object.entries(filter).forEach(([property, values]) => {\n      if (property === \"kinds\" || property === \"ids\" || property === \"authors\" || property[0] === \"#\") {\n        result[property] = result[property] || [];\n        for (let v = 0; v < values.length; v++) {\n          let value = values[v];\n          if (!result[property].includes(value))\n            result[property].push(value);\n        }\n      }\n    });\n    if (filter.limit && (!result.limit || filter.limit > result.limit))\n      result.limit = filter.limit;\n    if (filter.until && (!result.until || filter.until > result.until))\n      result.until = filter.until;\n    if (filter.since && (!result.since || filter.since < result.since))\n      result.since = filter.since;\n  }\n  return result;\n}\nfunction getFilterLimit(filter) {\n  if (filter.ids && !filter.ids.length)\n    return 0;\n  if (filter.kinds && !filter.kinds.length)\n    return 0;\n  if (filter.authors && !filter.authors.length)\n    return 0;\n  for (const [key, value] of Object.entries(filter)) {\n    if (key[0] === \"#\" && Array.isArray(value) && !value.length)\n      return 0;\n  }\n  return Math.min(\n    Math.max(0, filter.limit ?? Infinity),\n    filter.ids?.length ?? Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isReplaceableKind(kind)) ? filter.authors.length * filter.kinds.length : Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isAddressableKind(kind)) && filter[\"#d\"]?.length ? filter.authors.length * filter.kinds.length * filter[\"#d\"].length : Infinity\n  );\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  makeAuthEvent: () => makeAuthEvent\n});\nfunction makeAuthEvent(relayURL, challenge) {\n  return {\n    kind: ClientAuth,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relayURL],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n}\n\n// helpers.ts\nasync function yieldThread() {\n  return new Promise((resolve) => {\n    const ch = new MessageChannel();\n    const handler = () => {\n      ch.port1.removeEventListener(\"message\", handler);\n      resolve();\n    };\n    ch.port1.addEventListener(\"message\", handler);\n    ch.port2.postMessage(0);\n    ch.port1.start();\n  });\n}\nvar alwaysTrue = (t) => {\n  t[verifiedSymbol] = true;\n  return true;\n};\n\n// abstract-relay.ts\nvar SendingOnClosedConnection = class extends Error {\n  constructor(message, relay) {\n    super(`Tried to send message '${message} on a closed connection to ${relay}.`);\n    this.name = \"SendingOnClosedConnection\";\n  }\n};\nvar AbstractRelay = class {\n  url;\n  _connected = false;\n  onclose = null;\n  onnotice = (msg) => console.debug(`NOTICE from ${this.url}: ${msg}`);\n  baseEoseTimeout = 4400;\n  connectionTimeout = 4400;\n  publishTimeout = 4400;\n  pingFrequency = 2e4;\n  pingTimeout = 2e4;\n  openSubs = /* @__PURE__ */ new Map();\n  enablePing;\n  connectionTimeoutHandle;\n  connectionPromise;\n  openCountRequests = /* @__PURE__ */ new Map();\n  openEventPublishes = /* @__PURE__ */ new Map();\n  ws;\n  incomingMessageQueue = new Queue();\n  queueRunning = false;\n  challenge;\n  authPromise;\n  serial = 0;\n  verifyEvent;\n  _WebSocket;\n  constructor(url, opts) {\n    this.url = normalizeURL(url);\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation || WebSocket;\n    this.enablePing = opts.enablePing;\n  }\n  static async connect(url, opts) {\n    const relay = new AbstractRelay(url, opts);\n    await relay.connect();\n    return relay;\n  }\n  closeAllSubscriptions(reason) {\n    for (let [_, sub] of this.openSubs) {\n      sub.close(reason);\n    }\n    this.openSubs.clear();\n    for (let [_, ep] of this.openEventPublishes) {\n      ep.reject(new Error(reason));\n    }\n    this.openEventPublishes.clear();\n    for (let [_, cr] of this.openCountRequests) {\n      cr.reject(new Error(reason));\n    }\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    if (this.connectionPromise)\n      return this.connectionPromise;\n    this.challenge = void 0;\n    this.authPromise = void 0;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        reject(\"connection timed out\");\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new this._WebSocket(this.url);\n      } catch (err) {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(err);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle);\n        this._connected = true;\n        if (this.enablePing) {\n          this.pingpong();\n        }\n        resolve();\n      };\n      this.ws.onerror = (ev) => {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(ev.message || \"websocket error\");\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection errored\");\n        }\n      };\n      this.ws.onclose = (ev) => {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(ev.message || \"websocket closed\");\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection closed\");\n        }\n      };\n      this.ws.onmessage = this._onmessage.bind(this);\n    });\n    return this.connectionPromise;\n  }\n  async waitForPingPong() {\n    return new Promise((res, err) => {\n      ;\n      this.ws && this.ws.on && this.ws.on(\"pong\", () => res(true)) || err(\"ws can't listen for pong\");\n      this.ws && this.ws.ping && this.ws.ping();\n    });\n  }\n  async waitForDummyReq() {\n    return new Promise((resolve, _) => {\n      const sub = this.subscribe([{ ids: [\"a\".repeat(64)] }], {\n        oneose: () => {\n          sub.close();\n          resolve(true);\n        },\n        eoseTimeout: this.pingTimeout + 1e3\n      });\n    });\n  }\n  async pingpong() {\n    if (this.ws?.readyState === 1) {\n      const result = await Promise.any([\n        this.ws && this.ws.ping && this.ws.on ? this.waitForPingPong() : this.waitForDummyReq(),\n        new Promise((res) => setTimeout(() => res(false), this.pingTimeout))\n      ]);\n      if (result) {\n        setTimeout(() => this.pingpong(), this.pingFrequency);\n      } else {\n        this.closeAllSubscriptions(\"pingpong timed out\");\n        this._connected = false;\n        this.ws?.close();\n        this.onclose?.();\n      }\n    }\n  }\n  async runQueue() {\n    this.queueRunning = true;\n    while (true) {\n      if (false === this.handleNext()) {\n        break;\n      }\n      await yieldThread();\n    }\n    this.queueRunning = false;\n  }\n  handleNext() {\n    const json = this.incomingMessageQueue.dequeue();\n    if (!json) {\n      return false;\n    }\n    const subid = getSubscriptionId(json);\n    if (subid) {\n      const so = this.openSubs.get(subid);\n      if (!so) {\n        return;\n      }\n      const id = getHex64(json, \"id\");\n      const alreadyHave = so.alreadyHaveEvent?.(id);\n      so.receivedEvent?.(this, id);\n      if (alreadyHave) {\n        return;\n      }\n    }\n    try {\n      let data = JSON.parse(json);\n      switch (data[0]) {\n        case \"EVENT\": {\n          const so = this.openSubs.get(data[1]);\n          const event = data[2];\n          if (this.verifyEvent(event) && matchFilters(so.filters, event)) {\n            so.onevent(event);\n          }\n          return;\n        }\n        case \"COUNT\": {\n          const id = data[1];\n          const payload = data[2];\n          const cr = this.openCountRequests.get(id);\n          if (cr) {\n            cr.resolve(payload.count);\n            this.openCountRequests.delete(id);\n          }\n          return;\n        }\n        case \"EOSE\": {\n          const so = this.openSubs.get(data[1]);\n          if (!so)\n            return;\n          so.receivedEose();\n          return;\n        }\n        case \"OK\": {\n          const id = data[1];\n          const ok = data[2];\n          const reason = data[3];\n          const ep = this.openEventPublishes.get(id);\n          if (ep) {\n            clearTimeout(ep.timeout);\n            if (ok)\n              ep.resolve(reason);\n            else\n              ep.reject(new Error(reason));\n            this.openEventPublishes.delete(id);\n          }\n          return;\n        }\n        case \"CLOSED\": {\n          const id = data[1];\n          const so = this.openSubs.get(id);\n          if (!so)\n            return;\n          so.closed = true;\n          so.close(data[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onnotice(data[1]);\n          return;\n        case \"AUTH\": {\n          this.challenge = data[1];\n          return;\n        }\n      }\n    } catch (err) {\n      return;\n    }\n  }\n  async send(message) {\n    if (!this.connectionPromise)\n      throw new SendingOnClosedConnection(message, this.url);\n    this.connectionPromise.then(() => {\n      this.ws?.send(message);\n    });\n  }\n  async auth(signAuthEvent) {\n    const challenge = this.challenge;\n    if (!challenge)\n      throw new Error(\"can't perform auth, no challenge was received\");\n    if (this.authPromise)\n      return this.authPromise;\n    this.authPromise = new Promise(async (resolve, reject) => {\n      try {\n        let evt = await signAuthEvent(makeAuthEvent(this.url, challenge));\n        let timeout = setTimeout(() => {\n          let ep = this.openEventPublishes.get(evt.id);\n          if (ep) {\n            ep.reject(new Error(\"auth timed out\"));\n            this.openEventPublishes.delete(evt.id);\n          }\n        }, this.publishTimeout);\n        this.openEventPublishes.set(evt.id, { resolve, reject, timeout });\n        this.send('[\"AUTH\",' + JSON.stringify(evt) + \"]\");\n      } catch (err) {\n        console.warn(\"subscribe auth function failed:\", err);\n      }\n    });\n    return this.authPromise;\n  }\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        const ep = this.openEventPublishes.get(event.id);\n        if (ep) {\n          ep.reject(new Error(\"publish timed out\"));\n          this.openEventPublishes.delete(event.id);\n        }\n      }, this.publishTimeout);\n      this.openEventPublishes.set(event.id, { resolve, reject, timeout });\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    return ret;\n  }\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, { resolve, reject });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters).substring(1));\n    return ret;\n  }\n  subscribe(filters, params) {\n    const subscription = this.prepareSubscription(filters, params);\n    subscription.fire();\n    return subscription;\n  }\n  prepareSubscription(filters, params) {\n    this.serial++;\n    const id = params.id || (params.label ? params.label + \":\" : \"sub:\") + this.serial;\n    const subscription = new Subscription(this, id, filters, params);\n    this.openSubs.set(id, subscription);\n    return subscription;\n  }\n  close() {\n    this.closeAllSubscriptions(\"relay connection closed by us\");\n    this._connected = false;\n    this.ws?.close();\n    this.onclose?.();\n  }\n  _onmessage(ev) {\n    this.incomingMessageQueue.enqueue(ev.data);\n    if (!this.queueRunning) {\n      this.runQueue();\n    }\n  }\n};\nvar Subscription = class {\n  relay;\n  id;\n  closed = false;\n  eosed = false;\n  filters;\n  alreadyHaveEvent;\n  receivedEvent;\n  onevent;\n  oneose;\n  onclose;\n  eoseTimeout;\n  eoseTimeoutHandle;\n  constructor(relay, id, filters, params) {\n    this.relay = relay;\n    this.filters = filters;\n    this.id = id;\n    this.alreadyHaveEvent = params.alreadyHaveEvent;\n    this.receivedEvent = params.receivedEvent;\n    this.eoseTimeout = params.eoseTimeout || relay.baseEoseTimeout;\n    this.oneose = params.oneose;\n    this.onclose = params.onclose;\n    this.onevent = params.onevent || ((event) => {\n      console.warn(\n        `onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`,\n        event\n      );\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1));\n    this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    if (this.eosed)\n      return;\n    clearTimeout(this.eoseTimeoutHandle);\n    this.eosed = true;\n    this.oneose?.();\n  }\n  close(reason = \"closed by caller\") {\n    if (!this.closed && this.relay.connected) {\n      try {\n        this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\");\n      } catch (err) {\n        if (err instanceof SendingOnClosedConnection) {\n        } else {\n          throw err;\n        }\n      }\n      this.closed = true;\n    }\n    this.relay.openSubs.delete(this.id);\n    this.onclose?.(reason);\n  }\n};\n\n// relay.ts\nvar _WebSocket;\ntry {\n  _WebSocket = WebSocket;\n} catch {\n}\nvar Relay = class extends AbstractRelay {\n  constructor(url) {\n    super(url, { verifyEvent, websocketImplementation: _WebSocket });\n  }\n  static async connect(url) {\n    const relay = new Relay(url);\n    await relay.connect();\n    return relay;\n  }\n};\n\n// abstract-pool.ts\nvar AbstractSimplePool = class {\n  relays = /* @__PURE__ */ new Map();\n  seenOn = /* @__PURE__ */ new Map();\n  trackRelays = false;\n  verifyEvent;\n  enablePing;\n  trustedRelayURLs = /* @__PURE__ */ new Set();\n  _WebSocket;\n  constructor(opts) {\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation;\n    this.enablePing = opts.enablePing;\n  }\n  async ensureRelay(url, params) {\n    url = normalizeURL(url);\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new AbstractRelay(url, {\n        verifyEvent: this.trustedRelayURLs.has(url) ? alwaysTrue : this.verifyEvent,\n        websocketImplementation: this._WebSocket,\n        enablePing: this.enablePing\n      });\n      relay.onclose = () => {\n        this.relays.delete(url);\n      };\n      if (params?.connectionTimeout)\n        relay.connectionTimeout = params.connectionTimeout;\n      this.relays.set(url, relay);\n    }\n    await relay.connect();\n    return relay;\n  }\n  close(relays) {\n    relays.map(normalizeURL).forEach((url) => {\n      this.relays.get(url)?.close();\n      this.relays.delete(url);\n    });\n  }\n  subscribe(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    const request = [];\n    for (let i2 = 0; i2 < relays.length; i2++) {\n      const url = normalizeURL(relays[i2]);\n      if (!request.find((r) => r.url === url)) {\n        request.push({ url, filter });\n      }\n    }\n    return this.subscribeMap(request, params);\n  }\n  subscribeMany(relays, filters, params) {\n    params.onauth = params.onauth || params.doauth;\n    const request = [];\n    const uniqUrls = [];\n    for (let i2 = 0; i2 < relays.length; i2++) {\n      const url = normalizeURL(relays[i2]);\n      if (uniqUrls.indexOf(url) === -1) {\n        for (let f = 0; f < filters.length; f++) {\n          request.push({ url, filter: filters[f] });\n        }\n      }\n    }\n    return this.subscribeMap(request, params);\n  }\n  subscribeMap(requests, params) {\n    params.onauth = params.onauth || params.doauth;\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */ new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */ new Set();\n    const subs = [];\n    const eosesReceived = [];\n    let handleEose = (i2) => {\n      if (eosesReceived[i2])\n        return;\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter((a) => a).length === requests.length) {\n        params.oneose?.();\n        handleEose = () => {\n        };\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      if (closesReceived[i2])\n        return;\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter((a) => a).length === requests.length) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {\n        };\n      }\n    };\n    const localAlreadyHaveEventHandler = (id) => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(\n      requests.map(async ({ url, filter }, i2) => {\n        let relay;\n        try {\n          relay = await this.ensureRelay(url, {\n            connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n          });\n        } catch (err) {\n          handleClose(i2, err?.message || String(err));\n          return;\n        }\n        let subscription = relay.subscribe([filter], {\n          ...params,\n          oneose: () => handleEose(i2),\n          onclose: (reason) => {\n            if (reason.startsWith(\"auth-required: \") && params.onauth) {\n              relay.auth(params.onauth).then(() => {\n                relay.subscribe([filter], {\n                  ...params,\n                  oneose: () => handleEose(i2),\n                  onclose: (reason2) => {\n                    handleClose(i2, reason2);\n                  },\n                  alreadyHaveEvent: localAlreadyHaveEventHandler,\n                  eoseTimeout: params.maxWait\n                });\n              }).catch((err) => {\n                handleClose(i2, `auth was required and attempted, but failed with: ${err}`);\n              });\n            } else {\n              handleClose(i2, reason);\n            }\n          },\n          alreadyHaveEvent: localAlreadyHaveEventHandler,\n          eoseTimeout: params.maxWait\n        });\n        subs.push(subscription);\n      })\n    );\n    return {\n      async close(reason) {\n        await allOpened;\n        subs.forEach((sub) => {\n          sub.close(reason);\n        });\n      }\n    };\n  }\n  subscribeEose(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    const subcloser = this.subscribe(relays, filter, {\n      ...params,\n      oneose() {\n        subcloser.close(\"closed automatically on eose\");\n      }\n    });\n    return subcloser;\n  }\n  subscribeManyEose(relays, filters, params) {\n    params.onauth = params.onauth || params.doauth;\n    const subcloser = this.subscribeMany(relays, filters, {\n      ...params,\n      oneose() {\n        subcloser.close(\"closed automatically on eose\");\n      }\n    });\n    return subcloser;\n  }\n  async querySync(relays, filter, params) {\n    return new Promise(async (resolve) => {\n      const events = [];\n      this.subscribeEose(relays, filter, {\n        ...params,\n        onevent(event) {\n          events.push(event);\n        },\n        onclose(_) {\n          resolve(events);\n        }\n      });\n    });\n  }\n  async get(relays, filter, params) {\n    filter.limit = 1;\n    const events = await this.querySync(relays, filter, params);\n    events.sort((a, b) => b.created_at - a.created_at);\n    return events[0] || null;\n  }\n  publish(relays, event, options) {\n    return relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        return Promise.reject(\"duplicate url\");\n      }\n      let r = await this.ensureRelay(url);\n      return r.publish(event).catch(async (err) => {\n        if (err instanceof Error && err.message.startsWith(\"auth-required: \") && options?.onauth) {\n          await r.auth(options.onauth);\n          return r.publish(event);\n        }\n        throw err;\n      }).then((reason) => {\n        if (this.trackRelays) {\n          let set = this.seenOn.get(event.id);\n          if (!set) {\n            set = /* @__PURE__ */ new Set();\n            this.seenOn.set(event.id, set);\n          }\n          set.add(r);\n        }\n        return reason;\n      });\n    });\n  }\n  listConnectionStatus() {\n    const map = /* @__PURE__ */ new Map();\n    this.relays.forEach((relay, url) => map.set(url, relay.connected));\n    return map;\n  }\n  destroy() {\n    this.relays.forEach((conn) => conn.close());\n    this.relays = /* @__PURE__ */ new Map();\n  }\n};\n\n// pool.ts\nvar _WebSocket2;\ntry {\n  _WebSocket2 = WebSocket;\n} catch {\n}\nvar SimplePool = class extends AbstractSimplePool {\n  constructor(options) {\n    super({ verifyEvent, websocketImplementation: _WebSocket2, ...options });\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  Bech32MaxSize: () => Bech32MaxSize,\n  NostrTypeGuard: () => NostrTypeGuard,\n  decode: () => decode,\n  decodeNostrURI: () => decodeNostrURI,\n  encodeBytes: () => encodeBytes,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex3, concatBytes, hexToBytes as hexToBytes2 } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar NostrTypeGuard = {\n  isNProfile: (value) => /^nprofile1[a-z\\d]+$/.test(value || \"\"),\n  isNEvent: (value) => /^nevent1[a-z\\d]+$/.test(value || \"\"),\n  isNAddr: (value) => /^naddr1[a-z\\d]+$/.test(value || \"\"),\n  isNSec: (value) => /^nsec1[a-z\\d]{58}$/.test(value || \"\"),\n  isNPub: (value) => /^npub1[a-z\\d]{58}$/.test(value || \"\"),\n  isNote: (value) => /^note1[a-z\\d]+$/.test(value || \"\"),\n  isNcryptsec: (value) => /^ncryptsec1[a-z\\d]+$/.test(value || \"\")\n};\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction integerToUint8Array(number) {\n  const uint8Array = new Uint8Array(4);\n  uint8Array[0] = number >> 24 & 255;\n  uint8Array[1] = number >> 16 & 255;\n  uint8Array[2] = number >> 8 & 255;\n  uint8Array[3] = number & 255;\n  return uint8Array;\n}\nfunction decodeNostrURI(nip19code) {\n  try {\n    if (nip19code.startsWith(\"nostr:\"))\n      nip19code = nip19code.substring(6);\n    return decode(nip19code);\n  } catch (_err) {\n    return { type: \"invalid\", data: null };\n  }\n}\nfunction decode(code) {\n  let { prefix, words } = bech32.decode(code, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (tlv[3] && tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex3(tlv[2][0]) : void 0,\n          kind: tlv[3]?.[0] ? parseInt(bytesToHex3(tlv[3][0]), 16) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex3(tlv[2][0]),\n          kind: parseInt(bytesToHex3(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nsec\":\n      return { type: prefix, data };\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex3(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      throw new Error(`not enough data to read on TLV ${t}`);\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(key) {\n  return encodeBytes(\"nsec\", key);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hexToBytes2(hex));\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hexToBytes2(hex));\n}\nfunction encodeBech32(prefix, data) {\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction encodeBytes(prefix, bytes) {\n  return encodeBech32(prefix, bytes);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes2(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  return encodeBech32(\"nprofile\", data);\n}\nfunction neventEncode(event) {\n  let kindArray;\n  if (event.kind !== void 0) {\n    kindArray = integerToUint8Array(event.kind);\n  }\n  let data = encodeTLV({\n    0: [hexToBytes2(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes2(event.author)] : [],\n    3: kindArray ? [new Uint8Array(kindArray)] : []\n  });\n  return encodeBech32(\"nevent\", data);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes2(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  return encodeBech32(\"naddr\", data);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).reverse().forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { bytesToHex as bytesToHex4, randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { cbc } from \"@noble/ciphers/aes\";\nimport { base64 } from \"@scure/base\";\nfunction encrypt(secretKey, pubkey, text) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex4(secretKey) : secretKey;\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let ciphertext = cbc(normalizedKey, iv).encrypt(plaintext);\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nfunction decrypt(secretKey, pubkey, data) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex4(secretKey) : secretKey;\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let iv = base64.decode(ivb64);\n  let ciphertext = base64.decode(ctb64);\n  let plaintext = cbc(normalizedKey, iv).decrypt(ciphertext);\n  return utf8Decoder.decode(plaintext);\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  isNip05: () => isNip05,\n  isValid: () => isValid,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w_-]+(\\.[\\w_-]+)+)$/;\nvar isNip05 = (value) => NIP05_REGEX.test(value || \"\");\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch (_) {\n  null;\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${query}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    return json.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [, name = \"_\", domain] = match;\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${name}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    const pubkey = json.names[name];\n    return pubkey ? { pubkey, relays: json.relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nasync function isValid(pubkey, nip05) {\n  const res = await queryProfile(nip05);\n  return res ? res.pubkey === pubkey : false;\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: [],\n    quotes: []\n  };\n  let maybeParent;\n  let maybeRoot;\n  for (let i2 = event.tags.length - 1; i2 >= 0; i2--) {\n    const tag = event.tags[i2];\n    if (tag[0] === \"e\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl, eTagMarker, eTagAuthor] = tag;\n      const eventPointer = {\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : [],\n        author: eTagAuthor\n      };\n      if (eTagMarker === \"root\") {\n        result.root = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"reply\") {\n        result.reply = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"mention\") {\n        result.mentions.push(eventPointer);\n        continue;\n      }\n      if (!maybeParent) {\n        maybeParent = eventPointer;\n      } else {\n        maybeRoot = eventPointer;\n      }\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (tag[0] === \"q\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl] = tag;\n      result.quotes.push({\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : []\n      });\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n      continue;\n    }\n  }\n  if (!result.root) {\n    result.root = maybeRoot || maybeParent || result.reply;\n  }\n  if (!result.reply) {\n    result.reply = maybeParent || result.root;\n  }\n  ;\n  [result.reply, result.root].forEach((ref) => {\n    if (!ref)\n      return;\n    let idx = result.mentions.indexOf(ref);\n    if (idx !== -1) {\n      result.mentions.splice(idx, 1);\n    }\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays?.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  result.mentions.forEach((ref) => {\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  return result;\n}\n\n// nip11.ts\nvar nip11_exports = {};\n__export(nip11_exports, {\n  fetchRelayInformation: () => fetchRelayInformation,\n  useFetchImplementation: () => useFetchImplementation2\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function fetchRelayInformation(url) {\n  return await (await fetch(url.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: { Accept: \"application/nostr+json\" }\n  })).json();\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  fastEventHash: () => fastEventHash,\n  getPow: () => getPow,\n  minePow: () => minePow\n});\nimport { bytesToHex as bytesToHex5 } from \"@noble/hashes/utils\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction getPow(hex) {\n  let count = 0;\n  for (let i2 = 0; i2 < 64; i2 += 8) {\n    const nibble = parseInt(hex.substring(i2, i2 + 8), 16);\n    if (nibble === 0) {\n      count += 32;\n    } else {\n      count += Math.clz32(nibble);\n      break;\n    }\n  }\n  return count;\n}\nfunction minePow(unsigned, difficulty) {\n  let count = 0;\n  const event = unsigned;\n  const tag = [\"nonce\", count.toString(), difficulty.toString()];\n  event.tags.push(tag);\n  while (true) {\n    const now2 = Math.floor(new Date().getTime() / 1e3);\n    if (now2 !== event.created_at) {\n      count = 0;\n      event.created_at = now2;\n    }\n    tag[1] = (++count).toString();\n    event.id = fastEventHash(event);\n    if (getPow(event.id) >= difficulty) {\n      break;\n    }\n  }\n  return event;\n}\nfunction fastEventHash(evt) {\n  return bytesToHex5(\n    sha2562(utf8Encoder.encode(JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content])))\n  );\n}\n\n// nip17.ts\nvar nip17_exports = {};\n__export(nip17_exports, {\n  unwrapEvent: () => unwrapEvent2,\n  unwrapManyEvents: () => unwrapManyEvents2,\n  wrapEvent: () => wrapEvent2,\n  wrapManyEvents: () => wrapManyEvents2\n});\n\n// nip59.ts\nvar nip59_exports = {};\n__export(nip59_exports, {\n  createRumor: () => createRumor,\n  createSeal: () => createSeal,\n  createWrap: () => createWrap,\n  unwrapEvent: () => unwrapEvent,\n  unwrapManyEvents: () => unwrapManyEvents,\n  wrapEvent: () => wrapEvent,\n  wrapManyEvents: () => wrapManyEvents\n});\n\n// nip44.ts\nvar nip44_exports = {};\n__export(nip44_exports, {\n  decrypt: () => decrypt2,\n  encrypt: () => encrypt2,\n  getConversationKey: () => getConversationKey,\n  v2: () => v2\n});\nimport { chacha20 } from \"@noble/ciphers/chacha\";\nimport { equalBytes } from \"@noble/ciphers/utils\";\nimport { secp256k1 as secp256k12 } from \"@noble/curves/secp256k1\";\nimport { extract as hkdf_extract, expand as hkdf_expand } from \"@noble/hashes/hkdf\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nimport { concatBytes as concatBytes2, randomBytes as randomBytes2 } from \"@noble/hashes/utils\";\nimport { base64 as base642 } from \"@scure/base\";\nvar minPlaintextSize = 1;\nvar maxPlaintextSize = 65535;\nfunction getConversationKey(privkeyA, pubkeyB) {\n  const sharedX = secp256k12.getSharedSecret(privkeyA, \"02\" + pubkeyB).subarray(1, 33);\n  return hkdf_extract(sha2563, sharedX, \"nip44-v2\");\n}\nfunction getMessageKeys(conversationKey, nonce) {\n  const keys = hkdf_expand(sha2563, conversationKey, nonce, 76);\n  return {\n    chacha_key: keys.subarray(0, 32),\n    chacha_nonce: keys.subarray(32, 44),\n    hmac_key: keys.subarray(44, 76)\n  };\n}\nfunction calcPaddedLen(len) {\n  if (!Number.isSafeInteger(len) || len < 1)\n    throw new Error(\"expected positive integer\");\n  if (len <= 32)\n    return 32;\n  const nextPower = 1 << Math.floor(Math.log2(len - 1)) + 1;\n  const chunk = nextPower <= 256 ? 32 : nextPower / 8;\n  return chunk * (Math.floor((len - 1) / chunk) + 1);\n}\nfunction writeU16BE(num) {\n  if (!Number.isSafeInteger(num) || num < minPlaintextSize || num > maxPlaintextSize)\n    throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n  const arr = new Uint8Array(2);\n  new DataView(arr.buffer).setUint16(0, num, false);\n  return arr;\n}\nfunction pad(plaintext) {\n  const unpadded = utf8Encoder.encode(plaintext);\n  const unpaddedLen = unpadded.length;\n  const prefix = writeU16BE(unpaddedLen);\n  const suffix = new Uint8Array(calcPaddedLen(unpaddedLen) - unpaddedLen);\n  return concatBytes2(prefix, unpadded, suffix);\n}\nfunction unpad(padded) {\n  const unpaddedLen = new DataView(padded.buffer).getUint16(0);\n  const unpadded = padded.subarray(2, 2 + unpaddedLen);\n  if (unpaddedLen < minPlaintextSize || unpaddedLen > maxPlaintextSize || unpadded.length !== unpaddedLen || padded.length !== 2 + calcPaddedLen(unpaddedLen))\n    throw new Error(\"invalid padding\");\n  return utf8Decoder.decode(unpadded);\n}\nfunction hmacAad(key, message, aad) {\n  if (aad.length !== 32)\n    throw new Error(\"AAD associated data must be 32 bytes\");\n  const combined = concatBytes2(aad, message);\n  return hmac(sha2563, key, combined);\n}\nfunction decodePayload(payload) {\n  if (typeof payload !== \"string\")\n    throw new Error(\"payload must be a valid string\");\n  const plen = payload.length;\n  if (plen < 132 || plen > 87472)\n    throw new Error(\"invalid payload length: \" + plen);\n  if (payload[0] === \"#\")\n    throw new Error(\"unknown encryption version\");\n  let data;\n  try {\n    data = base642.decode(payload);\n  } catch (error) {\n    throw new Error(\"invalid base64: \" + error.message);\n  }\n  const dlen = data.length;\n  if (dlen < 99 || dlen > 65603)\n    throw new Error(\"invalid data length: \" + dlen);\n  const vers = data[0];\n  if (vers !== 2)\n    throw new Error(\"unknown encryption version \" + vers);\n  return {\n    nonce: data.subarray(1, 33),\n    ciphertext: data.subarray(33, -32),\n    mac: data.subarray(-32)\n  };\n}\nfunction encrypt2(plaintext, conversationKey, nonce = randomBytes2(32)) {\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const padded = pad(plaintext);\n  const ciphertext = chacha20(chacha_key, chacha_nonce, padded);\n  const mac = hmacAad(hmac_key, ciphertext, nonce);\n  return base642.encode(concatBytes2(new Uint8Array([2]), nonce, ciphertext, mac));\n}\nfunction decrypt2(payload, conversationKey) {\n  const { nonce, ciphertext, mac } = decodePayload(payload);\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const calculatedMac = hmacAad(hmac_key, ciphertext, nonce);\n  if (!equalBytes(calculatedMac, mac))\n    throw new Error(\"invalid MAC\");\n  const padded = chacha20(chacha_key, chacha_nonce, ciphertext);\n  return unpad(padded);\n}\nvar v2 = {\n  utils: {\n    getConversationKey,\n    calcPaddedLen\n  },\n  encrypt: encrypt2,\n  decrypt: decrypt2\n};\n\n// nip59.ts\nvar TWO_DAYS = 2 * 24 * 60 * 60;\nvar now = () => Math.round(Date.now() / 1e3);\nvar randomNow = () => Math.round(now() - Math.random() * TWO_DAYS);\nvar nip44ConversationKey = (privateKey, publicKey) => getConversationKey(privateKey, publicKey);\nvar nip44Encrypt = (data, privateKey, publicKey) => encrypt2(JSON.stringify(data), nip44ConversationKey(privateKey, publicKey));\nvar nip44Decrypt = (data, privateKey) => JSON.parse(decrypt2(data.content, nip44ConversationKey(privateKey, data.pubkey)));\nfunction createRumor(event, privateKey) {\n  const rumor = {\n    created_at: now(),\n    content: \"\",\n    tags: [],\n    ...event,\n    pubkey: getPublicKey(privateKey)\n  };\n  rumor.id = getEventHash(rumor);\n  return rumor;\n}\nfunction createSeal(rumor, privateKey, recipientPublicKey) {\n  return finalizeEvent(\n    {\n      kind: Seal,\n      content: nip44Encrypt(rumor, privateKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: []\n    },\n    privateKey\n  );\n}\nfunction createWrap(seal, recipientPublicKey) {\n  const randomKey = generateSecretKey();\n  return finalizeEvent(\n    {\n      kind: GiftWrap,\n      content: nip44Encrypt(seal, randomKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: [[\"p\", recipientPublicKey]]\n    },\n    randomKey\n  );\n}\nfunction wrapEvent(event, senderPrivateKey, recipientPublicKey) {\n  const rumor = createRumor(event, senderPrivateKey);\n  const seal = createSeal(rumor, senderPrivateKey, recipientPublicKey);\n  return createWrap(seal, recipientPublicKey);\n}\nfunction wrapManyEvents(event, senderPrivateKey, recipientsPublicKeys) {\n  if (!recipientsPublicKeys || recipientsPublicKeys.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  const wrappeds = [wrapEvent(event, senderPrivateKey, senderPublicKey)];\n  recipientsPublicKeys.forEach((recipientPublicKey) => {\n    wrappeds.push(wrapEvent(event, senderPrivateKey, recipientPublicKey));\n  });\n  return wrappeds;\n}\nfunction unwrapEvent(wrap, recipientPrivateKey) {\n  const unwrappedSeal = nip44Decrypt(wrap, recipientPrivateKey);\n  return nip44Decrypt(unwrappedSeal, recipientPrivateKey);\n}\nfunction unwrapManyEvents(wrappedEvents, recipientPrivateKey) {\n  let unwrappedEvents = [];\n  wrappedEvents.forEach((e) => {\n    unwrappedEvents.push(unwrapEvent(e, recipientPrivateKey));\n  });\n  unwrappedEvents.sort((a, b) => a.created_at - b.created_at);\n  return unwrappedEvents;\n}\n\n// nip17.ts\nfunction createEvent(recipients, message, conversationTitle, replyTo) {\n  const baseEvent = {\n    created_at: Math.ceil(Date.now() / 1e3),\n    kind: PrivateDirectMessage,\n    tags: [],\n    content: message\n  };\n  const recipientsArray = Array.isArray(recipients) ? recipients : [recipients];\n  recipientsArray.forEach(({ publicKey, relayUrl }) => {\n    baseEvent.tags.push(relayUrl ? [\"p\", publicKey, relayUrl] : [\"p\", publicKey]);\n  });\n  if (replyTo) {\n    baseEvent.tags.push([\"e\", replyTo.eventId, replyTo.relayUrl || \"\", \"reply\"]);\n  }\n  if (conversationTitle) {\n    baseEvent.tags.push([\"subject\", conversationTitle]);\n  }\n  return baseEvent;\n}\nfunction wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo) {\n  const event = createEvent(recipient, message, conversationTitle, replyTo);\n  return wrapEvent(event, senderPrivateKey, recipient.publicKey);\n}\nfunction wrapManyEvents2(senderPrivateKey, recipients, message, conversationTitle, replyTo) {\n  if (!recipients || recipients.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  return [{ publicKey: senderPublicKey }, ...recipients].map(\n    (recipient) => wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo)\n  );\n}\nvar unwrapEvent2 = unwrapEvent;\nvar unwrapManyEvents2 = unwrapManyEvents;\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  let kind;\n  const tags = [...t.tags ?? [], [\"e\", reposted.id, relayUrl], [\"p\", reposted.pubkey]];\n  if (reposted.kind === ShortTextNote) {\n    kind = Repost;\n  } else {\n    kind = GenericRepost;\n    tags.push([\"k\", String(reposted.kind)]);\n  }\n  return finalizeEvent(\n    {\n      kind,\n      tags,\n      content: t.content === \"\" || reposted.tags?.find((tag) => tag[0] === \"-\") ? \"\" : JSON.stringify(reposted),\n      created_at: t.created_at\n    },\n    privateKey\n  );\n}\nfunction getRepostedEventPointer(event) {\n  if (![Repost, GenericRepost].includes(event.kind)) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifyEvent(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter((tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\"));\n  return finalizeEvent(\n    {\n      ...t,\n      kind: Reaction,\n      tags: [...t.tags ?? [], ...inheritedTags, [\"e\", reacted.id], [\"p\", reacted.pubkey]],\n      content: t.content ?? \"+\"\n    },\n    privateKey\n  );\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== Reaction) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  parse: () => parse3\n});\nvar noCharacter = /\\W/m;\nvar noURLCharacter = /\\W |\\W$|$|,| /m;\nfunction* parse3(content) {\n  const max = content.length;\n  let prevIndex = 0;\n  let index = 0;\n  while (index < max) {\n    let u = content.indexOf(\":\", index);\n    if (u === -1) {\n      break;\n    }\n    if (content.substring(u - 5, u) === \"nostr\") {\n      const m = content.substring(u + 60).match(noCharacter);\n      const end = m ? u + 60 + m.index : max;\n      try {\n        let pointer;\n        let { data, type } = decode(content.substring(u + 1, end));\n        switch (type) {\n          case \"npub\":\n            pointer = { pubkey: data };\n            break;\n          case \"nsec\":\n          case \"note\":\n            index = end + 1;\n            continue;\n          default:\n            pointer = data;\n        }\n        if (prevIndex !== u - 5) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - 5) };\n        }\n        yield { type: \"reference\", pointer };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = u + 1;\n        continue;\n      }\n    } else if (content.substring(u - 5, u) === \"https\" || content.substring(u - 4, u) === \"http\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 5 : 4;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        if (url.pathname.endsWith(\".png\") || url.pathname.endsWith(\".jpg\") || url.pathname.endsWith(\".jpeg\") || url.pathname.endsWith(\".gif\") || url.pathname.endsWith(\".webp\")) {\n          yield { type: \"image\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (url.pathname.endsWith(\".mp4\") || url.pathname.endsWith(\".avi\") || url.pathname.endsWith(\".webm\") || url.pathname.endsWith(\".mkv\")) {\n          yield { type: \"video\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (url.pathname.endsWith(\".mp3\") || url.pathname.endsWith(\".aac\") || url.pathname.endsWith(\".ogg\") || url.pathname.endsWith(\".opus\")) {\n          yield { type: \"audio\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        yield { type: \"url\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else if (content.substring(u - 3, u) === \"wss\" || content.substring(u - 2, u) === \"ws\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 3 : 2;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid ws url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        yield { type: \"relay\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else {\n      index = u + 1;\n      continue;\n    }\n  }\n  if (prevIndex !== max) {\n    yield { type: \"text\", text: content.substring(prevIndex) };\n  }\n}\n\n// nip28.ts\nvar nip28_exports = {};\n__export(nip28_exports, {\n  channelCreateEvent: () => channelCreateEvent,\n  channelHideMessageEvent: () => channelHideMessageEvent,\n  channelMessageEvent: () => channelMessageEvent,\n  channelMetadataEvent: () => channelMetadataEvent,\n  channelMuteUserEvent: () => channelMuteUserEvent\n});\nvar channelCreateEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelCreation,\n      tags: [...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMetadataEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMetadata,\n      tags: [[\"e\", t.channel_create_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMessageEvent = (t, privateKey) => {\n  const tags = [[\"e\", t.channel_create_event_id, t.relay_url, \"root\"]];\n  if (t.reply_to_channel_message_event_id) {\n    tags.push([\"e\", t.reply_to_channel_message_event_id, t.relay_url, \"reply\"]);\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMessage,\n      tags: [...tags, ...t.tags ?? []],\n      content: t.content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelHideMessageEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelHideMessage,\n      tags: [[\"e\", t.channel_message_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMuteUserEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMuteUser,\n      tags: [[\"p\", t.pubkey_to_mute], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\n\n// nip30.ts\nvar nip30_exports = {};\n__export(nip30_exports, {\n  EMOJI_SHORTCODE_REGEX: () => EMOJI_SHORTCODE_REGEX,\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar EMOJI_SHORTCODE_REGEX = /:(\\w+):/;\nvar regex = () => new RegExp(`\\\\B${EMOJI_SHORTCODE_REGEX.source}\\\\B`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    try {\n      const [shortcode, name] = match;\n      yield {\n        shortcode,\n        name,\n        start: match.index,\n        end: match.index + shortcode.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (shortcode, name) => {\n    return replacer({\n      shortcode,\n      name\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation3,\n  validateGithub: () => validateGithub\n});\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch3(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip47.ts\nvar nip47_exports = {};\n__export(nip47_exports, {\n  makeNwcRequestEvent: () => makeNwcRequestEvent,\n  parseConnectionString: () => parseConnectionString\n});\nfunction parseConnectionString(connectionString) {\n  const { host, pathname, searchParams } = new URL(connectionString);\n  const pubkey = pathname || host;\n  const relay = searchParams.get(\"relay\");\n  const secret = searchParams.get(\"secret\");\n  if (!pubkey || !relay || !secret) {\n    throw new Error(\"invalid connection string\");\n  }\n  return { pubkey, relay, secret };\n}\nasync function makeNwcRequestEvent(pubkey, secretKey, invoice) {\n  const content = {\n    method: \"pay_invoice\",\n    params: {\n      invoice\n    }\n  };\n  const encryptedContent = encrypt(secretKey, pubkey, JSON.stringify(content));\n  const eventTemplate = {\n    kind: NWCWalletRequest,\n    created_at: Math.round(Date.now() / 1e3),\n    content: encryptedContent,\n    tags: [[\"p\", pubkey]]\n  };\n  return finalizeEvent(eventTemplate, secretKey);\n}\n\n// nip54.ts\nvar nip54_exports = {};\n__export(nip54_exports, {\n  normalizeIdentifier: () => normalizeIdentifier\n});\nfunction normalizeIdentifier(name) {\n  name = name.trim().toLowerCase();\n  name = name.normalize(\"NFKC\");\n  return Array.from(name).map((char) => {\n    if (/\\p{Letter}/u.test(char) || /\\p{Number}/u.test(char)) {\n      return char;\n    }\n    return \"-\";\n  }).join(\"\");\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getSatoshisAmountFromBolt11: () => getSatoshisAmountFromBolt11,\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation4,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch4;\ntry {\n  _fetch4 = fetch;\n} catch {\n}\nfunction useFetchImplementation4(fetchImplementation) {\n  _fetch4 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = new URL(`/.well-known/lnurlp/${name}`, `https://${domain}`).toString();\n    } else {\n      return null;\n    }\n    let res = await _fetch4(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest(params) {\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: params.comment || \"\",\n    tags: [\n      [\"p\", \"pubkey\" in params ? params.pubkey : params.event.pubkey],\n      [\"amount\", params.amount.toString()],\n      [\"relays\", ...params.relays]\n    ]\n  };\n  if (\"event\" in params) {\n    zr.tags.push([\"e\", params.event.id]);\n    if (isReplaceableKind(params.event.kind)) {\n      const a = [\"a\", `${params.event.kind}:${params.event.pubkey}:`];\n      zr.tags.push(a);\n    } else if (isAddressableKind(params.event.kind)) {\n      let d = params.event.tags.find(([t, v]) => t === \"d\" && v);\n      if (!d)\n        throw new Error(\"d tag not found or is empty\");\n      const a = [\"a\", `${params.event.kind}:${params.event.pubkey}:${d[1]}`];\n      zr.tags.push(a);\n    }\n    zr.tags.push([\"k\", params.event.kind.toString()]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifyEvent(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(([t]) => t === \"e\" || t === \"p\" || t === \"a\");\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [...tagsFromZapRequest, [\"P\", zr.pubkey], [\"bolt11\", bolt11], [\"description\", zapRequest]]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\nfunction getSatoshisAmountFromBolt11(bolt11) {\n  if (bolt11.length < 50) {\n    return 0;\n  }\n  bolt11 = bolt11.substring(0, 50);\n  const idx = bolt11.lastIndexOf(\"1\");\n  if (idx === -1) {\n    return 0;\n  }\n  const hrp = bolt11.substring(0, idx);\n  if (!hrp.startsWith(\"lnbc\")) {\n    return 0;\n  }\n  const amount = hrp.substring(4);\n  if (amount.length < 1) {\n    return 0;\n  }\n  const char = amount[amount.length - 1];\n  const digit = char.charCodeAt(0) - \"0\".charCodeAt(0);\n  const isDigit = digit >= 0 && digit <= 9;\n  let cutPoint = amount.length - 1;\n  if (isDigit) {\n    cutPoint++;\n  }\n  if (cutPoint < 1) {\n    return 0;\n  }\n  const num = parseInt(amount.substring(0, cutPoint));\n  switch (char) {\n    case \"m\":\n      return num * 1e5;\n    case \"u\":\n      return num * 100;\n    case \"n\":\n      return num / 10;\n    case \"p\":\n      return num / 1e4;\n    default:\n      return num * 1e8;\n  }\n}\n\n// nip98.ts\nvar nip98_exports = {};\n__export(nip98_exports, {\n  getToken: () => getToken,\n  hashPayload: () => hashPayload,\n  unpackEventFromToken: () => unpackEventFromToken,\n  validateEvent: () => validateEvent2,\n  validateEventKind: () => validateEventKind,\n  validateEventMethodTag: () => validateEventMethodTag,\n  validateEventPayloadTag: () => validateEventPayloadTag,\n  validateEventTimestamp: () => validateEventTimestamp,\n  validateEventUrlTag: () => validateEventUrlTag,\n  validateToken: () => validateToken\n});\nimport { sha256 as sha2564 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex6 } from \"@noble/hashes/utils\";\nimport { base64 as base643 } from \"@scure/base\";\nvar _authorizationScheme = \"Nostr \";\nasync function getToken(loginUrl, httpMethod, sign, includeAuthorizationScheme = false, payload) {\n  const event = {\n    kind: HTTPAuth,\n    tags: [\n      [\"u\", loginUrl],\n      [\"method\", httpMethod]\n    ],\n    created_at: Math.round(new Date().getTime() / 1e3),\n    content: \"\"\n  };\n  if (payload) {\n    event.tags.push([\"payload\", hashPayload(payload)]);\n  }\n  const signedEvent = await sign(event);\n  const authorizationScheme = includeAuthorizationScheme ? _authorizationScheme : \"\";\n  return authorizationScheme + base643.encode(utf8Encoder.encode(JSON.stringify(signedEvent)));\n}\nasync function validateToken(token, url, method) {\n  const event = await unpackEventFromToken(token).catch((error) => {\n    throw error;\n  });\n  const valid = await validateEvent2(event, url, method).catch((error) => {\n    throw error;\n  });\n  return valid;\n}\nasync function unpackEventFromToken(token) {\n  if (!token) {\n    throw new Error(\"Missing token\");\n  }\n  token = token.replace(_authorizationScheme, \"\");\n  const eventB64 = utf8Decoder.decode(base643.decode(token));\n  if (!eventB64 || eventB64.length === 0 || !eventB64.startsWith(\"{\")) {\n    throw new Error(\"Invalid token\");\n  }\n  const event = JSON.parse(eventB64);\n  return event;\n}\nfunction validateEventTimestamp(event) {\n  if (!event.created_at) {\n    return false;\n  }\n  return Math.round(new Date().getTime() / 1e3) - event.created_at < 60;\n}\nfunction validateEventKind(event) {\n  return event.kind === HTTPAuth;\n}\nfunction validateEventUrlTag(event, url) {\n  const urlTag = event.tags.find((t) => t[0] === \"u\");\n  if (!urlTag) {\n    return false;\n  }\n  return urlTag.length > 0 && urlTag[1] === url;\n}\nfunction validateEventMethodTag(event, method) {\n  const methodTag = event.tags.find((t) => t[0] === \"method\");\n  if (!methodTag) {\n    return false;\n  }\n  return methodTag.length > 0 && methodTag[1].toLowerCase() === method.toLowerCase();\n}\nfunction hashPayload(payload) {\n  const hash = sha2564(utf8Encoder.encode(JSON.stringify(payload)));\n  return bytesToHex6(hash);\n}\nfunction validateEventPayloadTag(event, payload) {\n  const payloadTag = event.tags.find((t) => t[0] === \"payload\");\n  if (!payloadTag) {\n    return false;\n  }\n  const payloadHash = hashPayload(payload);\n  return payloadTag.length > 0 && payloadTag[1] === payloadHash;\n}\nasync function validateEvent2(event, url, method, body) {\n  if (!verifyEvent(event)) {\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  }\n  if (!validateEventKind(event)) {\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  }\n  if (!validateEventTimestamp(event)) {\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  }\n  if (!validateEventUrlTag(event, url)) {\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  }\n  if (!validateEventMethodTag(event, method)) {\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  }\n  if (Boolean(body) && typeof body === \"object\" && Object.keys(body).length > 0) {\n    if (!validateEventPayloadTag(event, body)) {\n      throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n    }\n  }\n  return true;\n}\nexport {\n  Relay,\n  SimplePool,\n  finalizeEvent,\n  fakejson_exports as fj,\n  generateSecretKey,\n  getEventHash,\n  getFilterLimit,\n  getPublicKey,\n  kinds_exports as kinds,\n  matchFilter,\n  matchFilters,\n  mergeFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip10_exports as nip10,\n  nip11_exports as nip11,\n  nip13_exports as nip13,\n  nip17_exports as nip17,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip27_exports as nip27,\n  nip28_exports as nip28,\n  nip30_exports as nip30,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip44_exports as nip44,\n  nip47_exports as nip47,\n  nip54_exports as nip54,\n  nip57_exports as nip57,\n  nip59_exports as nip59,\n  nip98_exports as nip98,\n  parseReferences,\n  serializeEvent,\n  sortEvents,\n  utils_exports as utils,\n  validateEvent,\n  verifiedSymbol,\n  verifyEvent\n};\n", "// prettier-ignore\nimport {\n  wrapCipher, Cipher, CipherWithOutput,\n  createView, setBigUint64, equalBytes, u32, u8,\n} from './utils.js';\nimport { ghash, polyval } from './_polyval.js';\nimport { bytes as abytes } from './_assert.js';\n\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\n\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n\n// TODO: remove multiplication, binary ops only\nfunction mul2(n: number) {\n  return (n << 1) ^ (POLY & -(n >> 7));\n}\n\nfunction mul(a: number, b: number) {\n  let res = 0;\n  for (; b > 0; b >>= 1) {\n    // Montgomery ladder\n    res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n    a = mul2(a); // a = 2*a\n  }\n  return res;\n}\n\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n  let t = new Uint8Array(256);\n  for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x)) t[i] = x;\n  const box = new Uint8Array(256);\n  box[0] = 0x63; // first elm\n  for (let i = 0; i < 255; i++) {\n    let x = t[255 - i];\n    x |= x << 8;\n    box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n  }\n  return box;\n})();\n\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n\n// Rotate u32 by 8\nconst rotr32_8 = (n: number) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n: number) => (n << 8) | (n >>> 24);\n\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox: Uint8Array, fn: (n: number) => number) {\n  if (sbox.length !== 256) throw new Error('Wrong sbox length');\n  const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n  const T1 = T0.map(rotl32_8);\n  const T2 = T1.map(rotl32_8);\n  const T3 = T2.map(rotl32_8);\n  const T01 = new Uint32Array(256 * 256);\n  const T23 = new Uint32Array(256 * 256);\n  const sbox2 = new Uint16Array(256 * 256);\n  for (let i = 0; i < 256; i++) {\n    for (let j = 0; j < 256; j++) {\n      const idx = i * 256 + j;\n      T01[idx] = T0[i] ^ T1[j];\n      T23[idx] = T2[i] ^ T3[j];\n      sbox2[idx] = (sbox[i] << 8) | sbox[j];\n    }\n  }\n  return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\n\nconst tableEncoding = /* @__PURE__ */ genTtable(\n  sbox,\n  (s: number) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2)\n);\nconst tableDecoding = /* @__PURE__ */ genTtable(\n  invSbox,\n  (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14)\n);\n\nconst xPowers = /* @__PURE__ */ (() => {\n  const p = new Uint8Array(16);\n  for (let i = 0, x = 1; i < 16; i++, x = mul2(x)) p[i] = x;\n  return p;\n})();\n\nexport function expandKeyLE(key: Uint8Array): Uint32Array {\n  abytes(key);\n  const len = key.length;\n  if (![16, 24, 32].includes(len))\n    throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n  const { sbox2 } = tableEncoding;\n  const k32 = u32(key);\n  const Nk = k32.length;\n  const subByte = (n: number) => applySbox(sbox2, n, n, n, n);\n  const xk = new Uint32Array(len + 28); // expanded key\n  xk.set(k32);\n  // 4.3.1 Key expansion\n  for (let i = Nk; i < xk.length; i++) {\n    let t = xk[i - 1];\n    if (i % Nk === 0) t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n    else if (Nk > 6 && i % Nk === 4) t = subByte(t);\n    xk[i] = xk[i - Nk] ^ t;\n  }\n  return xk;\n}\n\nexport function expandKeyDecLE(key: Uint8Array): Uint32Array {\n  const encKey = expandKeyLE(key);\n  const xk = encKey.slice();\n  const Nk = encKey.length;\n  const { sbox2 } = tableEncoding;\n  const { T0, T1, T2, T3 } = tableDecoding;\n  // Inverse key by chunks of 4 (rounds)\n  for (let i = 0; i < Nk; i += 4) {\n    for (let j = 0; j < 4; j++) xk[i + j] = encKey[Nk - i - 4 + j];\n  }\n  encKey.fill(0);\n  // apply InvMixColumn except first & last round\n  for (let i = 4; i < Nk - 4; i++) {\n    const x = xk[i];\n    const w = applySbox(sbox2, x, x, x, x);\n    xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n  }\n  return xk;\n}\n\n// Apply tables\nfunction apply0123(\n  T01: Uint32Array,\n  T23: Uint32Array,\n  s0: number,\n  s1: number,\n  s2: number,\n  s3: number\n) {\n  return (\n    T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n    T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]\n  );\n}\n\nfunction applySbox(sbox2: Uint16Array, s0: number, s1: number, s2: number, s3: number) {\n  return (\n    sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n    (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16)\n  );\n}\n\nfunction encrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableEncoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // last round (without mixcolumns, so using SBOX2 table)\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction decrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableDecoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // Last round\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction getDst(len: number, dst?: Uint8Array) {\n  if (!dst) return new Uint8Array(len);\n  abytes(dst);\n  if (dst.length < len)\n    throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n  return dst;\n}\n\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk: Uint32Array, nonce: Uint8Array, src: Uint8Array, dst?: Uint8Array) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  const srcLen = src.length;\n  dst = getDst(srcLen, dst);\n  const ctr = nonce;\n  const c32 = u32(ctr);\n  // Fill block (empty, ctr=0)\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    // Full 128 bit counter with wrap around\n    let carry = 1;\n    for (let i = ctr.length - 1; i >= 0; i--) {\n      carry = (carry + (ctr[i] & 0xff)) | 0;\n      ctr[i] = carry & 0xff;\n      carry >>>= 8;\n    }\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than block)\n  // It's possible to handle > u32 fast, but is it worth it?\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(\n  xk: Uint32Array,\n  isLE: boolean,\n  nonce: Uint8Array,\n  src: Uint8Array,\n  dst?: Uint8Array\n) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  dst = getDst(src.length, dst);\n  const ctr = nonce; // write new value to nonce, so it can be re-used\n  const c32 = u32(ctr);\n  const view = createView(ctr);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  const ctrPos = isLE ? 0 : 12;\n  const srcLen = src.length;\n  // Fill block (empty, ctr=0)\n  let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n    view.setUint32(ctrPos, ctrNum, isLE);\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than a block)\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function ctr(key: Uint8Array, nonce: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(nonce, BLOCK_SIZE);\n    function processCtr(buf: Uint8Array, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const n = nonce.slice();\n      const out = ctrCounter(xk, n, buf, dst);\n      xk.fill(0);\n      n.fill(0);\n      return out;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCtr(plaintext, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCtr(ciphertext, dst),\n    };\n  }\n);\n\nfunction validateBlockDecrypt(data: Uint8Array) {\n  abytes(data);\n  if (data.length % BLOCK_SIZE !== 0) {\n    throw new Error(\n      `aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`\n    );\n  }\n}\n\nfunction validateBlockEncrypt(plaintext: Uint8Array, pcks5: boolean, dst?: Uint8Array) {\n  let outLen = plaintext.length;\n  const remaining = outLen % BLOCK_SIZE;\n  if (!pcks5 && remaining !== 0)\n    throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n  const b = u32(plaintext);\n  if (pcks5) {\n    let left = BLOCK_SIZE - remaining;\n    if (!left) left = BLOCK_SIZE; // if no bytes left, create empty padding block\n    outLen = outLen + left;\n  }\n  const out = getDst(outLen, dst);\n  const o = u32(out);\n  return { b, o, out };\n}\n\nfunction validatePCKS(data: Uint8Array, pcks5: boolean) {\n  if (!pcks5) return data;\n  const len = data.length;\n  if (!len) throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n  const lastByte = data[len - 1];\n  if (lastByte <= 0 || lastByte > 16) throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n  const out = data.subarray(0, -lastByte);\n  for (let i = 0; i < lastByte; i++)\n    if (data[len - i - 1] !== lastByte) throw new Error(`aes/pcks5: wrong padding`);\n  return out;\n}\n\nfunction padPCKS(left: Uint8Array) {\n  const tmp = new Uint8Array(16);\n  const tmp32 = u32(tmp);\n  tmp.set(left);\n  const paddingByte = BLOCK_SIZE - left.length;\n  for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++) tmp[i] = paddingByte;\n  return tmp32;\n}\n\nexport type BlockOpts = { disablePadding?: boolean };\n\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb = wrapCipher(\n  { blockSize: 16 },\n  function ecb(key: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        abytes(plaintext);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const xk = expandKeyLE(key);\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        for (let i = 0; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round’s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cbc(key: Uint8Array, iv: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        const xk = expandKeyLE(key);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const n32 = u32(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const n32 = u32(iv);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= b.length; ) {\n          // prettier-ignore\n          const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n          (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n          const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n          (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cfb(key: Uint8Array, iv: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    function processCfb(src: Uint8Array, isEncrypt: boolean, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const srcLen = src.length;\n      dst = getDst(srcLen, dst);\n      const src32 = u32(src);\n      const dst32 = u32(dst);\n      const next32 = isEncrypt ? dst32 : src32;\n      const n32 = u32(iv);\n      // prettier-ignore\n      let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n      for (let i = 0; i + 4 <= src32.length; ) {\n        const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n        dst32[i + 0] = src32[i + 0] ^ e0;\n        dst32[i + 1] = src32[i + 1] ^ e1;\n        dst32[i + 2] = src32[i + 2] ^ e2;\n        dst32[i + 3] = src32[i + 3] ^ e3;\n        (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n      }\n      // leftovers (less than block)\n      const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n      if (start < srcLen) {\n        ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n        const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n        for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n        buf.fill(0);\n      }\n      xk.fill(0);\n      return dst;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCfb(plaintext, true, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCfb(ciphertext, false, dst),\n    };\n  }\n);\n\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(\n  fn: typeof ghash,\n  isLE: boolean,\n  key: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n) {\n  const h = fn.create(key, data.length + (AAD?.length || 0));\n  if (AAD) h.update(AAD);\n  h.update(data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  if (AAD) setBigUint64(view, 0, BigInt(AAD.length * 8), isLE);\n  setBigUint64(view, 8, BigInt(data.length * 8), isLE);\n  h.update(num);\n  return h.digest();\n}\n\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexport const gcm = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function gcm(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    abytes(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0) throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey: Uint8Array, tagMask: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(ghash, false, authKey, data, AAD);\n      for (let i = 0; i < tagMask.length; i++) tag[i] ^= tagMask[i];\n      return tag;\n    }\n    function deriveKeys() {\n      const xk = expandKeyLE(key);\n      const authKey = EMPTY_BLOCK.slice();\n      const counter = EMPTY_BLOCK.slice();\n      ctr32(xk, false, counter, counter, authKey);\n      if (nonce.length === 12) {\n        counter.set(nonce);\n      } else {\n        // Spec (NIST 800-38d) supports variable size nonce.\n        // Not supported for now, but can be useful.\n        const nonceLen = EMPTY_BLOCK.slice();\n        const view = createView(nonceLen);\n        setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n        // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n        ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n      }\n      const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n      return { xk, authKey, counter, tagMask };\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const out = new Uint8Array(plaintext.length + tagLength);\n        ctr32(xk, false, counter, plaintext, out);\n        const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n        out.set(tag, plaintext.length);\n        xk.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        if (ciphertext.length < tagLength)\n          throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = _computeTag(authKey, tagMask, data);\n        if (!equalBytes(tag, passedTag)) throw new Error('aes/gcm: invalid ghash tag');\n        const out = ctr32(xk, false, counter, data);\n        authKey.fill(0);\n        tagMask.fill(0);\n        xk.fill(0);\n        return out;\n      },\n    };\n  }\n);\n\nconst limit = (name: string, min: number, max: number) => (value: number) => {\n  if (!Number.isSafeInteger(value) || min > value || value > max)\n    throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const siv = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function siv(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n      abytes(AAD);\n      AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n      const len = key.length;\n      if (len !== 16 && len !== 24 && len !== 32)\n        throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n      const xk = expandKeyLE(key);\n      const encKey = new Uint8Array(len);\n      const authKey = new Uint8Array(16);\n      const n32 = u32(nonce);\n      // prettier-ignore\n      let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n      let counter = 0;\n      for (const derivedKey of [authKey, encKey].map(u32)) {\n        const d32 = u32(derivedKey);\n        for (let i = 0; i < d32.length; i += 2) {\n          // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n          const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n          d32[i + 0] = o0;\n          d32[i + 1] = o1;\n          s0 = ++counter; // increment counter inside state\n        }\n      }\n      xk.fill(0);\n      return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey: Uint32Array, authKey: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(polyval, true, authKey, data, AAD);\n      // Compute the expected tag by XORing S_s and the nonce, clearing the\n      // most significant bit of the last byte and encrypting with the\n      // message-encryption key.\n      for (let i = 0; i < 12; i++) tag[i] ^= nonce[i];\n      tag[15] &= 0x7f; // Clear the highest bit\n      // encrypt tag as block\n      const t32 = u32(tag);\n      // prettier-ignore\n      let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n      ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n      (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n      return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey: Uint32Array, tag: Uint8Array, input: Uint8Array) {\n      let block = tag.slice();\n      block[15] |= 0x80; // Force highest bit\n      return ctr32(encKey, true, block, input);\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        PLAIN_LIMIT(plaintext.length);\n        const { encKey, authKey } = deriveKeys();\n        const tag = _computeTag(encKey, authKey, plaintext);\n        const out = new Uint8Array(plaintext.length + tagLength);\n        out.set(tag, plaintext.length);\n        out.set(processSiv(encKey, tag, plaintext));\n        encKey.fill(0);\n        authKey.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        CIPHER_LIMIT(ciphertext.length);\n        const tag = ciphertext.subarray(-tagLength);\n        const { encKey, authKey } = deriveKeys();\n        const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n        const expectedTag = _computeTag(encKey, authKey, plaintext);\n        encKey.fill(0);\n        authKey.fill(0);\n        if (!equalBytes(tag, expectedTag)) throw new Error('invalid polyval tag');\n        return plaintext;\n      },\n    };\n  }\n);\n\nfunction isBytes32(a: unknown): a is Uint8Array {\n  return (\n    a != null &&\n    typeof a === 'object' &&\n    (a instanceof Uint32Array || a.constructor.name === 'Uint32Array')\n  );\n}\n\nfunction encryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_encryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\nfunction decryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_decryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexport const unsafe = {\n  expandKeyLE,\n  expandKeyDecLE,\n  encrypt,\n  decrypt,\n  encryptBlock,\n  decryptBlock,\n  ctrCounter,\n  ctr32,\n};\n", "import { createView, toBytes, Input, Hash, u32 } from './utils.js';\nimport { bytes as abytes, exists as aexists, output as aoutput } from './_assert.js';\n\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\n\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0: number, s1: number, s2: number, s3: number) => {\n  const hiBit = s3 & 1;\n  return {\n    s3: (s2 << 31) | (s3 >>> 1),\n    s2: (s1 << 31) | (s2 >>> 1),\n    s1: (s0 << 31) | (s1 >>> 1),\n    s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n  };\n};\n\nconst swapLE = (n: number) =>\n  (((n >>> 0) & 0xff) << 24) |\n  (((n >>> 8) & 0xff) << 16) |\n  (((n >>> 16) & 0xff) << 8) |\n  ((n >>> 24) & 0xff) |\n  0;\n\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k: Uint8Array): Uint8Array {\n  k.reverse();\n  const hiBit = k[15] & 1;\n  // k >>= 1\n  let carry = 0;\n  for (let i = 0; i < k.length; i++) {\n    const t = k[i];\n    k[i] = (t >>> 1) | carry;\n    carry = (t & 1) << 7;\n  }\n  k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n  return k;\n}\n\ntype Value = { s0: number; s1: number; s2: number; s3: number };\n\nconst estimateWindow = (bytes: number) => {\n  if (bytes > 64 * 1024) return 8;\n  if (bytes > 1024) return 4;\n  return 2;\n};\n\nclass GHASH implements Hash<GHASH> {\n  readonly blockLen = BLOCK_SIZE;\n  readonly outputLen = BLOCK_SIZE;\n  protected s0 = 0;\n  protected s1 = 0;\n  protected s2 = 0;\n  protected s3 = 0;\n  protected finished = false;\n  protected t: Value[];\n  private W: number;\n  private windowSize: number;\n  // We select bits per window adaptively based on expectedLength\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    abytes(key, 16);\n    const kView = createView(key);\n    let k0 = kView.getUint32(0, false);\n    let k1 = kView.getUint32(4, false);\n    let k2 = kView.getUint32(8, false);\n    let k3 = kView.getUint32(12, false);\n    // generate table of doubled keys (half of montgomery ladder)\n    const doubles: Value[] = [];\n    for (let i = 0; i < 128; i++) {\n      doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n      ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n    }\n    const W = estimateWindow(expectedLength || 1024);\n    if (![1, 2, 4, 8].includes(W))\n      throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n    this.W = W;\n    const bits = 128; // always 128 bits;\n    const windows = bits / W;\n    const windowSize = (this.windowSize = 2 ** W);\n    const items: Value[] = [];\n    // Create precompute table for window of W bits\n    for (let w = 0; w < windows; w++) {\n      // truth table: 00, 01, 10, 11\n      for (let byte = 0; byte < windowSize; byte++) {\n        // prettier-ignore\n        let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n        for (let j = 0; j < W; j++) {\n          const bit = (byte >>> (W - j - 1)) & 1;\n          if (!bit) continue;\n          const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n          (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n        }\n        items.push({ s0, s1, s2, s3 });\n      }\n    }\n    this.t = items;\n  }\n  protected _updateBlock(s0: number, s1: number, s2: number, s3: number) {\n    (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n    const { W, t, windowSize } = this;\n    // prettier-ignore\n    let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n    const mask = (1 << W) - 1; // 2**W will kill performance.\n    let w = 0;\n    for (const num of [s0, s1, s2, s3]) {\n      for (let bytePos = 0; bytePos < 4; bytePos++) {\n        const byte = (num >>> (8 * bytePos)) & 0xff;\n        for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n          const bit = (byte >>> (W * bitPos)) & mask;\n          const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n          (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n          w += 1;\n        }\n      }\n    }\n    this.s0 = o0;\n    this.s1 = o1;\n    this.s2 = o2;\n    this.s3 = o3;\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    const left = data.length % BLOCK_SIZE;\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  destroy() {\n    const { t } = this;\n    // clean precompute table\n    for (const elm of t) {\n      (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n    }\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out;\n  }\n  digest(): Uint8Array {\n    const res = new Uint8Array(BLOCK_SIZE);\n    this.digestInto(res);\n    this.destroy();\n    return res;\n  }\n}\n\nclass Polyval extends GHASH {\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    const ghKey = _toGHASHKey(key.slice());\n    super(ghKey, expectedLength);\n    ghKey.fill(0);\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const left = data.length % BLOCK_SIZE;\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(\n        swapLE(b32[i * 4 + 3]),\n        swapLE(b32[i * 4 + 2]),\n        swapLE(b32[i * 4 + 1]),\n        swapLE(b32[i * 4 + 0])\n      );\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(\n        swapLE(ZEROS32[3]),\n        swapLE(ZEROS32[2]),\n        swapLE(ZEROS32[1]),\n        swapLE(ZEROS32[0])\n      );\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // tmp ugly hack\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out.reverse();\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nfunction wrapConstructorWithKey<H extends Hash<H>>(\n  hashCons: (key: Input, expectedLength?: number) => Hash<H>\n) {\n  const hashC = (msg: Input, key: Input): Uint8Array =>\n    hashCons(key, msg.length).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(16), 0);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input, expectedLength?: number) => hashCons(key, expectedLength);\n  return hashC;\n}\n\nexport const ghash = wrapConstructorWithKey(\n  (key, expectedLength) => new GHASH(key, expectedLength)\n);\nexport const polyval = wrapConstructorWithKey(\n  (key, expectedLength) => new Polyval(key, expectedLength)\n);\n"],
  "mappings": "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",
  "names": ["import_dist", "import_dist", "import_dist", "i", "bytes", "BLOCK_SIZE", "POLY", "mul2", "i", "sbox", "sbox2", "t0", "t1", "t2", "t3", "ctr", "ecb", "cbc", "cfb", "gcm", "siv", "bytes", "decrypt", "encrypt", "decrypt2", "encrypt2"]
}
